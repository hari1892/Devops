node {
    def mvnHome
    stage('Preparation') { // for display purposes
        // Get some code from a GitHub repository
        git branch: 'ci-cd', url: 'https://github.com/hari1892/Devops.git'
       // git 'https://github.com/hari1892/Devops.git'
        // Get the Maven tool.
        // ** NOTE: This 'M3' Maven tool must be configured
        // **       in the global configuration.
        mvnHome = tool 'maven3.8.6'
    }
    stage('Build') {
        // Run the maven build
        withEnv(["MVN_HOME=$mvnHome"]) {
            if (isUnix()) {
                sh """
                cd java-maven-sample
                $MVN_HOME/bin/mvn package
                """
              //  sh '"$MVN_HOME/bin/mvn" -Dmaven.test.failure.ignore clean package'
            } else {
                bat(/"%MVN_HOME%\bin\mvn" -Dmaven.test.failure.ignore clean package/)
            }
        }
    }
    stage('Deploy to Tomcat') {
        sh """
        cd java-maven-sample/target
        """
   /*     
         sshagent (credentials: ['deploy-dev']) {
    sh 'scp -o StrictHostKeyChecking=no  target/my-app-1.0-SNAPSHOT.war root@192.168.56.23:/opt/tomcat-demo-devops/webapps'
    */
   // sshPublisher(publishers: [sshPublisherDesc(configName: 'centos-deploy', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: 'ls', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '/opt/tomcat-demo-devops/webapps', remoteDirectorySDF: false, removePrefix: '', sourceFiles: "${WORKSPACE}/java-maven-sample/target/my-app-1.0-SNAPSHOT.war")], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])

                        sshPublisher(
                            publishers: [
                                sshPublisherDesc(
                                    configName: 'centos-deploy', 
                                    transfers: [
                                        sshTransfer(
                                            cleanRemote: false, 
                                            excludes: '', 
                                            execCommand: '/opt/tomcat-demo-devops/bin/shutdown.sh && sleep 10 && /opt/tomcat-demo-devops/bin/startup.sh', 
                                            execTimeout: 120000, 
                                            flatten: false, 
                                            makeEmptyDirs: false, 
                                            noDefaultExcludes: false, 
                                            patternSeparator: '[, ]+', 
                                            remoteDirectory: '', 
                                            remoteDirectorySDF: false, 
                                            removePrefix: 'java-maven-sample/target/', 
                                            sourceFiles: 'java-maven-sample/target/java-tomcat-maven-example.war'
                                        )
                                    ], 
                                    usePromotionTimestamp: false, 
                                    useWorkspaceInPromotion: false, 
                                    verbose: true
                                )
                            ]
                        )
                    }

    
}
